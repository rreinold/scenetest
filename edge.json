{
    "codeLibraries": {
        "JustPublish": {
            "api": "",
            "code": "function justPublishOneMessage(req, resp, topic, payload) {\n    ClearBlade.init({request:req});\n    var messaging = ClearBlade.Messaging({}, function(){});\n    result = messaging.publish(topic, payload);\n}\n",
            "dependencies": "clearblade,log",
            "description": "publishes normal message over mqtt",
            "library_key": "fee8fcf80adac9d49bc29edbefb101::JustPublish",
            "name": "JustPublish",
            "system_key": "fee8fcf80adac9d49bc29edbefb101",
            "version": 1,
            "visibility": "system"
        },
        "TestLibrary": {
            "api": "",
            "code": "function freddy() {\n    return 1;\n}\n",
            "dependencies": "log",
            "description": "Kinda useless",
            "library_key": "fee8fcf80adac9d49bc29edbefb101::TestLibrary",
            "name": "TestLibrary",
            "system_key": "fee8fcf80adac9d49bc29edbefb101",
            "version": 1,
            "visibility": "system"
        },
        "TriggerLib": {
            "api": "",
            "code": "function publishTrigger(req, resp, msgClass, msgType) {\n    var msgInfo = {\n        msgClass:msgClass,\n        msgType:msgType\n    };\n    ClearBlade.init({request:req});\n    var messaging = ClearBlade.Messaging({}, function(){});\n    messaging.publish(\"/clearblade/internal/trigger\", JSON.stringify(msgInfo));\n}\n",
            "dependencies": "clearblade,log",
            "description": "publishes trigger event over mqtt",
            "library_key": "fee8fcf80adac9d49bc29edbefb101::TriggerLib",
            "name": "TriggerLib",
            "system_key": "fee8fcf80adac9d49bc29edbefb101",
            "version": 1,
            "visibility": "system"
        }
    },
    "codeServices": {
        "HorribleService": {
            "code": "function HorribleService(req, resp) {\n\t// ok\n    resp.success(\"This is horrible 1\")\n}\n",
            "dependencies": "",
            "euid": "",
            "name": "HorribleService",
            "params": []
        },
        "amIAnEdge": {
            "code": "function amIAnEdge(req, resp) {\n    ClearBlade.init({request:req});\n    if (ClearBlade.isEdge() === true) {\n        resp.success(\"We are an edge: \" + ClearBlade.edgeId());\n    } else {\n        resp.success(\"We are NOT an edge\");\n    }\n}\n",
            "dependencies": "clearblade,log",
            "euid": "",
            "name": "amIAnEdge",
            "params": []
        },
        "collectionCreatedTrigger": {
            "code": "\nfunction collectionCreatedTrigger(req, resp) {\n    publishTrigger(req, resp, \"Data\", \"CollectionCreated\");\n    resp.success(\"Collection Created Trigger Fired\");\n}\n",
            "dependencies": "TriggerLib,log",
            "euid": "",
            "name": "collectionCreatedTrigger",
            "params": []
        },
        "collectionDeletedTrigger": {
            "code": "\nfunction collectionDeletedTrigger(req, resp) {\n    publishTrigger(req, resp, \"Data\", \"CollectionDeleted\");\n    resp.success(\"Collection Deleted Trigger Fired\");\n}\n",
            "dependencies": "TriggerLib,log",
            "euid": "",
            "name": "collectionDeletedTrigger",
            "params": []
        },
        "example": {
            "code": "function example(req, resp) {\n    resp.success(\"Hello world: \" + JSON.stringify(req))\n}\n",
            "dependencies": "TestLibrary,log",
            "euid": "",
            "name": "example",
            "params": [
                "badabada"
            ]
        },
        "handleDeviceTrigger": {
            "code": "\nfunction handleDeviceTrigger(req, resp) {\n    sysKey = req.systemKey;\n    var sysSec = req.systemSecret;\n    var userToken = req.userToken;\n    publishTrigger(req, resp, \"Messaging\", \"Publish\");\n    resp.success(\"We win! Request object: \" + JSON.stringify(req));\n}\n",
            "dependencies": "TriggerLib,log",
            "euid": "",
            "name": "handleDeviceTrigger",
            "params": []
        },
        "handlePublish": {
            "code": "\nfunction handlePublish(req, resp) {\n    sysKey = req.systemKey;\n    var sysSec = req.systemSecret;\n    var userToken = req.userToken;\n    justPublishOneMessage(req, resp, \"/timer/popped\", \"Not much to say\");\n    publishTrigger(req, resp, \"Messaging\", \"Publish\");\n    resp.success(\"Should have published by now\");\n}\n",
            "dependencies": "JustPublish,TriggerLib,log",
            "euid": "",
            "name": "handlePublish",
            "params": []
        },
        "itemCreatedTrigger": {
            "code": "\nfunction itemCreatedTrigger(req, resp) {\n    sysKey = req.systemKey;\n    var sysSec = req.systemSecret;\n    var userToken = req.userToken;\n    publishTrigger(req, resp, \"Data\", \"ItemCreated\");\n    resp.success(\"We win! Request object: \" + JSON.stringify(req));\n}\n",
            "dependencies": "TriggerLib,log",
            "euid": "",
            "name": "itemCreatedTrigger",
            "params": []
        },
        "msgHistoryTimer": {
            "code": "function msgHistoryTimer(req, resp) {\n    logStdErr(\"TIMER ON THE EDGE\");\n    ClearBlade.init({request:req});\n    var messaging = ClearBlade.Messaging({}, function(){});\n    if (ClearBlade.isEdge() === true) {\n        messaging.getAndDeleteMessageHistory(\"device/updateForTimer\", 100, function(failed, results) {\n            if (failed) {\n                logStdErr(\"getAndDeleteMessageHistory FAILED: \" + JSON.stringify(results))\n            } else {\n                logStdErr(\"getAndDeleteMessageHistory SUCCEEDED: \" + JSON.stringify(results))\n                if (results.length \u003e 0) {\n                    resObj = JSON.parse(results[0].payload)\n                    ClearBlade.updateDevice(resObj.deviceName, {state:resObj.state.toString()}, false);\n                }\n            }\n        });\n        resp.success(ClearBlade.edgeId() + \" Everybody loves somebody sometime\");\n    }\n}\n",
            "dependencies": "clearblade,log",
            "euid": "",
            "name": "msgHistoryTimer",
            "params": []
        },
        "realUpdateDeviceTrigger": {
            "code": "function realUpdateDeviceTrigger(req, resp) {\n    ClearBlade.init({request:req});\n    if (ClearBlade.isEdge() === true) {\n        logStdErr(\"update device trigger on EDGE\" + JSON.stringify(req));\n        publishTrigger(req, resp, \"Device\", \"DeviceUpdated\");\n        resp.success(ClearBlade.edgeId() + \" Got the update device trigger pull\");\n    } else {\n        logStdErr(\"update device trigger on NOVI\" + JSON.stringify(req));\n        publishTrigger(req, resp, \"Device\", \"DeviceUpdated\");\n        resp.success(\"Novi Ignoring update device trigger pull\");\n    }\n}\n",
            "dependencies": "clearblade,TriggerLib,log",
            "euid": "",
            "name": "realUpdateDeviceTrigger",
            "params": []
        },
        "updateDeviceTrigger": {
            "code": "function updateDeviceTrigger(req, resp) {\n    logStdErr(\"In update device TRIGGER\")\n    ClearBlade.init({request:req});\n    var body = JSON.parse(req.params.body);\n    body.state = body.state.toString();\n\n\n    ClearBlade.updateDevice(\"Dorky Torque Wrench\", body, true);\n\n    resp.success(\"I think it worked\");\n}\n",
            "dependencies": "clearblade,log",
            "euid": "",
            "name": "updateDeviceTrigger",
            "params": []
        },
        "updateUser": {
            "code": "function updateUser(req, resp) {\n    ClearBlade.init({request:req});\n\n\n    var q = ClearBlade.Query();\n\n\n    q.equalTo(\"email\", \"foo@bar.com\");\n\n\n    ClearBlade.User().setUsers(q, {\"dafizzle\": \"WOW\"});\n\n\n    resp.success(\"I think it worked\");\n}\n",
            "dependencies": "clearblade,log",
            "euid": "",
            "name": "updateUser",
            "params": []
        },
        "userCreatedTrigger": {
            "code": "\nfunction userCreatedTrigger(req, resp) {\n    sysKey = req.systemKey;\n    var sysSec = req.systemSecret;\n    var userToken = req.userToken;\n    publishTrigger(req, resp, \"User\", \"UserCreated\");\n    resp.success(\"Should have published by now\");\n}\n",
            "dependencies": "TriggerLib,log",
            "euid": "",
            "name": "userCreatedTrigger",
            "params": []
        },
        "userDeletedTrigger": {
            "code": "\nfunction userDeletedTrigger(req, resp) {\n    publishTrigger(req, resp, \"User\", \"UserDeleted\");\n    resp.success(\"Should have published by now\");\n}\n",
            "dependencies": "TriggerLib,log",
            "euid": "",
            "name": "userDeletedTrigger",
            "params": []
        },
        "userUpdatedTrigger": {
            "code": "\nfunction userUpdatedTrigger(req, resp) {\n    sysKey = req.systemKey;\n    var sysSec = req.systemSecret;\n    var userToken = req.userToken;\n    publishTrigger(req, resp, \"User\", \"UserUpdated\");\n    resp.success(\"We win! Request object: \" + JSON.stringify(req));\n}\n",
            "dependencies": "TriggerLib,log",
            "euid": "",
            "name": "userUpdatedTrigger",
            "params": []
        }
    },
    "collections": {
        "DaCollection": "fee8fcf80a94a695b9e7bcb28f1d",
        "DuhCollection": "fee8fcf80a8cc8d6af9180ebd534",
        "YaddaYadda": "fee8fcf80ab4aaed85a7e5f3ba3e"
    },
    "developer": {
        "email": "theDev@developer.com",
        "password": "IAmTheDev",
        "userId": null
    },
    "devices": {
        "Dorky Torque Wrench": {
            "__HostId__": "7bd64912-7a3b-4277-92a7-77ff9c39952d",
            "active_key": "I Be Active",
            "allow_certificate_auth": false,
            "allow_key_auth": true,
            "certificate": "I do not have one",
            "created_date": "2016-07-20T10:35:28-05:00",
            "description": "How torqued am I?",
            "device_key": "fee8fcf80adac9d49bc29edbefb101 :: Dorky Torque Wrench",
            "enabled": true,
            "keys": "I Be Active:I Am Not Active",
            "last_active_date": "2016-07-20T10:35:28-05:00",
            "name": "Dorky Torque Wrench",
            "roles": [
                "a",
                "e"
            ],
            "state": "",
            "system_key": "fee8fcf80adac9d49bc29edbefb101",
            "torque": 0,
            "type": "Torque Wrench"
        },
        "Noisy Hammer": {
            "__HostId__": "7bd64912-7a3b-4277-92a7-77ff9c39952d",
            "active_key": "I Be Active",
            "allow_certificate_auth": false,
            "allow_key_auth": true,
            "certificate": "I do not have one",
            "created_date": "2016-07-20T10:35:28-05:00",
            "description": "Shut up",
            "device_key": "fee8fcf80adac9d49bc29edbefb101 :: Noisy Hammer",
            "enabled": true,
            "keys": "I Be Active:I Am Not Active",
            "last_active_date": "2016-07-20T10:35:28-05:00",
            "location": "Initial Location",
            "name": "Noisy Hammer",
            "roles": [
                "a",
                "b"
            ],
            "state": "",
            "system_key": "fee8fcf80adac9d49bc29edbefb101",
            "type": "Hammer"
        },
        "Quiet Hammer": {
            "__HostId__": "7bd64912-7a3b-4277-92a7-77ff9c39952d",
            "active_key": "I Be Active",
            "allow_certificate_auth": false,
            "allow_key_auth": true,
            "certificate": "I do not have one",
            "created_date": "2016-07-20T10:35:28-05:00",
            "description": "Hello?",
            "device_key": "fee8fcf80adac9d49bc29edbefb101 :: Quiet Hammer",
            "enabled": true,
            "keys": "I Be Active:I Am Not Active",
            "last_active_date": "2016-07-20T10:35:28-05:00",
            "location": "Initial Location",
            "name": "Quiet Hammer",
            "roles": [
                "c",
                "d"
            ],
            "state": "",
            "system_key": "fee8fcf80adac9d49bc29edbefb101",
            "type": "Hammer"
        }
    },
    "edges": {
        "Cutting Edge": {
            "description": "Fake Description",
            "edge_key": "fee8fcf80adac9d49bc29edbefb101:Cutting Edge",
            "name": "Cutting Edge",
            "novi_system_key": "fee8fcf80adac9d49bc29edbefb101",
            "system_key": "fee8fcf80adac9d49bc29edbefb101",
            "system_secret": "FEE8FCF80AB4ADAAC1FDE4A7B2E101",
            "token": "FakeToken"
        },
        "Double-Edged Sword": {
            "description": "Fake Description",
            "edge_key": "fee8fcf80adac9d49bc29edbefb101:Double-Edged Sword",
            "name": "Double-Edged Sword",
            "novi_system_key": "fee8fcf80adac9d49bc29edbefb101",
            "system_key": "fee8fcf80adac9d49bc29edbefb101",
            "system_secret": "FEE8FCF80AB4ADAAC1FDE4A7B2E101",
            "token": "ReallyFakeToken"
        }
    },
    "items": {},
    "messagingUrl": "127.0.0.1:1883",
    "platformUrl": "http://127.0.0.1:9000",
    "roles": {
        "Admin": "Admin",
        "Anonymous": "Anonymous",
        "Authenticated": "Authenticated",
        "a": "fee8fcf80a9e9ac5f8f79cfa9601",
        "b": "fee8fcf80a8696809597fc89c35d",
        "c": "fee8fcf80ab8b5b4a2f2b8fbb3ca01",
        "d": "fee8fcf80ac0b2c0f3f598989328",
        "e": "fee8fcf80ae0879ceac1ebf6ac8a01",
        "updater": "fee8fcf80ac4d7c1839e83c6e7a001"
    },
    "systemKey": "fee8fcf80adac9d49bc29edbefb101",
    "systemSecret": "FEE8FCF80AB4ADAAC1FDE4A7B2E101",
    "teardown": {
        "adminClient": {
            "DevToken": "xy2aA_xQAR4msSHdqa25fMAmIc8LGBkPSo0zoQmTmL2OSDjh43sqYo_m3glCm7FKkuSx0Bn7u9z4pUxW",
            "MQTTClient": null,
            "Email": "theDev@developer.com",
            "Password": "IAmTheDev",
            "HttpAddr": "http://127.0.0.1:9000",
            "MqttAddr": "127.0.0.1:1883"
        },
        "collections": [
            "fee8fcf80a94a695b9e7bcb28f1d",
            "fee8fcf80a8cc8d6af9180ebd534",
            "fee8fcf80ab4aaed85a7e5f3ba3e"
        ],
        "dev_email": "theDev@developer.com",
        "dev_password": "IAmTheDev",
        "developer": null,
        "devices": [
            "Noisy Hammer",
            "Quiet Hammer",
            "Dorky Torque Wrench"
        ],
        "edges": [
            "Cutting Edge",
            "Double-Edged Sword"
        ],
        "libraries": [
            "TestLibrary",
            "TriggerLib",
            "JustPublish"
        ],
        "messagingUrl": "127.0.0.1:1883",
        "platformUrl": "http://127.0.0.1:9000",
        "roles": [
            "fee8fcf80a9e9ac5f8f79cfa9601",
            "fee8fcf80a8696809597fc89c35d",
            "fee8fcf80ab8b5b4a2f2b8fbb3ca01",
            "fee8fcf80ac0b2c0f3f598989328",
            "fee8fcf80ae0879ceac1ebf6ac8a01",
            "fee8fcf80ac4d7c1839e83c6e7a001"
        ],
        "services": [
            "msgHistoryTimer",
            "amIAnEdge",
            "updateUser",
            "userUpdatedTrigger",
            "handleDeviceTrigger",
            "example",
            "HorribleService",
            "itemCreatedTrigger",
            "handlePublish",
            "userCreatedTrigger",
            "userDeletedTrigger",
            "collectionCreatedTrigger",
            "updateDeviceTrigger",
            "realUpdateDeviceTrigger",
            "collectionDeletedTrigger"
        ],
        "systemKey": "fee8fcf80adac9d49bc29edbefb101",
        "systemSecret": "FEE8FCF80AB4ADAAC1FDE4A7B2E101",
        "timers": [
            "DoSomething"
        ],
        "triggers": [
            "RealDeviceUpdateHandler",
            "DeviceUpdateHandler",
            "PublishHandler",
            "Updated A User",
            "Added A Row",
            "Created a user",
            "Deleted a user",
            "Created a collection",
            "Deleted a collection"
        ],
        "users": [
            "fee8fcf80aece7a38ee0a1bab5a701",
            "fee8fcf80ab2cdeb929c9bbad857",
            "fee8fcf80adc95819df7f5b8f57c"
        ]
    },
    "timers": {
        "DoSomething": {
            "description": "Does something",
            "frequency": 1,
            "name": "DoSomething",
            "repeats": 1,
            "service_name": "example",
            "start_time": "2016-07-20T10:35:28.415863091-05:00",
            "system_key": "fee8fcf80adac9d49bc29edbefb101",
            "system_secret": "FEE8FCF80AB4ADAAC1FDE4A7B2E101",
            "timer_key": "fee8fcf80adac9d49bc29edbefb101::DoSomething",
            "user_id": "a2abb3f80a9ec0d0fdf2d98489b501",
            "user_token": "xy2aA_xQAR4msSHdqa25fMAmIc8LGBkPSo0zoQmTmL2OSDjh43sqYo_m3glCm7FKkuSx0Bn7u9z4pUxW"
        }
    },
    "triggers": {
        "Added A Row": {
            "event_definition": {
                "def_keys": [
                    "collectionId",
                    "collectionName"
                ],
                "def_module": "Data",
                "def_name": "ItemCreated",
                "visibility": true
            },
            "key_value_pairs": {
                "collectionName": "DuhCollection"
            },
            "name": "Added A Row",
            "service_name": "itemCreatedTrigger",
            "system_key": "fee8fcf80adac9d49bc29edbefb101",
            "system_secret": "FEE8FCF80AB4ADAAC1FDE4A7B2E101"
        },
        "Created a collection": {
            "event_definition": {
                "def_keys": [],
                "def_module": "Data",
                "def_name": "CollectionCreated",
                "visibility": true
            },
            "key_value_pairs": {},
            "name": "Created a collection",
            "service_name": "collectionCreatedTrigger",
            "system_key": "fee8fcf80adac9d49bc29edbefb101",
            "system_secret": "FEE8FCF80AB4ADAAC1FDE4A7B2E101"
        },
        "Created a user": {
            "event_definition": {
                "def_keys": [],
                "def_module": "User",
                "def_name": "UserCreated",
                "visibility": true
            },
            "key_value_pairs": {},
            "name": "Created a user",
            "service_name": "userCreatedTrigger",
            "system_key": "fee8fcf80adac9d49bc29edbefb101",
            "system_secret": "FEE8FCF80AB4ADAAC1FDE4A7B2E101"
        },
        "Deleted a collection": {
            "event_definition": {
                "def_keys": [
                    "collectionId",
                    "collectionName"
                ],
                "def_module": "Data",
                "def_name": "CollectionDeleted",
                "visibility": true
            },
            "key_value_pairs": {},
            "name": "Deleted a collection",
            "service_name": "collectionDeletedTrigger",
            "system_key": "fee8fcf80adac9d49bc29edbefb101",
            "system_secret": "FEE8FCF80AB4ADAAC1FDE4A7B2E101"
        },
        "Deleted a user": {
            "event_definition": {
                "def_keys": [
                    "userId"
                ],
                "def_module": "User",
                "def_name": "UserDeleted",
                "visibility": true
            },
            "key_value_pairs": {},
            "name": "Deleted a user",
            "service_name": "userDeletedTrigger",
            "system_key": "fee8fcf80adac9d49bc29edbefb101",
            "system_secret": "FEE8FCF80AB4ADAAC1FDE4A7B2E101"
        },
        "DeviceUpdateHandler": {
            "event_definition": {
                "def_keys": [
                    "topic"
                ],
                "def_module": "Messaging",
                "def_name": "Publish",
                "visibility": true
            },
            "key_value_pairs": {
                "topic": "/device/update"
            },
            "name": "DeviceUpdateHandler",
            "service_name": "updateDeviceTrigger",
            "system_key": "fee8fcf80adac9d49bc29edbefb101",
            "system_secret": "FEE8FCF80AB4ADAAC1FDE4A7B2E101"
        },
        "PublishHandler": {
            "event_definition": {
                "def_keys": [
                    "topic"
                ],
                "def_module": "Messaging",
                "def_name": "Publish",
                "visibility": true
            },
            "key_value_pairs": {
                "topic": "/foo/#"
            },
            "name": "PublishHandler",
            "service_name": "example",
            "system_key": "fee8fcf80adac9d49bc29edbefb101",
            "system_secret": "FEE8FCF80AB4ADAAC1FDE4A7B2E101"
        },
        "RealDeviceUpdateHandler": {
            "event_definition": {
                "def_keys": [
                    "deviceName"
                ],
                "def_module": "Device",
                "def_name": "DeviceUpdated",
                "visibility": true
            },
            "key_value_pairs": {},
            "name": "RealDeviceUpdateHandler",
            "service_name": "realUpdateDeviceTrigger",
            "system_key": "fee8fcf80adac9d49bc29edbefb101",
            "system_secret": "FEE8FCF80AB4ADAAC1FDE4A7B2E101"
        },
        "Updated A User": {
            "event_definition": {
                "def_keys": [
                    "userId"
                ],
                "def_module": "User",
                "def_name": "UserUpdated",
                "visibility": true
            },
            "key_value_pairs": {},
            "name": "Updated A User",
            "service_name": "userUpdatedTrigger",
            "system_key": "fee8fcf80adac9d49bc29edbefb101",
            "system_secret": "FEE8FCF80AB4ADAAC1FDE4A7B2E101"
        }
    },
    "users": {
        "bar@bar.com": {
            "creation_date": "2016-07-20T10:35:27-05:00",
            "dafizzle": null,
            "dasizzley": null,
            "email": "bar@bar.com",
            "password": "IAmBar",
            "user_id": "fee8fcf80ab2cdeb929c9bbad857",
            "user_token": "qpXVwWM-XDI0UB2sFmH17J92EjO6aE3Q5dYmfoqwPBhuDT_p7GlHvxXYCvVQJc-DwxlHqIePRWpJ_5YO"
        },
        "foo@bar.com": {
            "creation_date": "2016-07-20T10:35:27-05:00",
            "dafizzle": null,
            "dasizzley": null,
            "email": "foo@bar.com",
            "password": "IAmFoo",
            "user_id": "fee8fcf80aece7a38ee0a1bab5a701",
            "user_token": "r-mehFE7vtCSCJP3IHpZXDIlLGIOqU33a5OkQ4phAma8ABhPLAfEnO6wzlSN6BThshMl33GY-YybLETB"
        },
        "swm@clearblade.com": {
            "creation_date": "2016-07-20T10:35:27-05:00",
            "dafizzle": null,
            "dasizzley": null,
            "email": "swm@clearblade.com",
            "password": "IAmSWM",
            "user_id": "fee8fcf80adc95819df7f5b8f57c",
            "user_token": "2HLqwmhEKaCQrN3uVMLevVvTTGdHJPK6O3glL4-pdiHr-x4kn0r6soi1G2yQXvKKvG8EBE7VgmeH1EAz"
        }
    }
}