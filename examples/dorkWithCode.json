{
    "name": "Muck with code",
    "scenarios": [ ["Updater", 1], ["Caller", 1] ],
    "sequencing": "Parallel",

    //  This whole thing is database bound. Both subprocesses wait until the db
    //  is updated. It's kind of slow. This process sets three different code services
    "Updater": {
        "name": "Just update some code",
        "steps": [
            ["setUser", "foo@bar.com"],
            ["sync", "Ready, Set, Go!", 2],
            ["repeat", 10, [
                ["updateService", "HorribleService", "@HorribleService1.js", ["paramXXX"]],
                ["sync", "IChangedIt", 2],
                ["updateService", "HorribleService", "@HorribleService2.js", ["paramYYY"]],
                ["sync", "IChangedIt", 2],
                ["updateService", "HorribleService", "@HorribleService3.js", ["paramZZZ"]],
                ["sync", "IChangedIt", 2] ]
            ],
            ["sync", "Finished", 2]
        ]
    },


    //  Again. slow. Wait for an update, run the service, and print the output.
    "Caller": {
        "name": "Just callin' some code",
        "steps": [
            ["setUser", "foo@bar.com"],
            ["sync", "Ready, Set, Go!", 2],
            ["repeat", 30, [
                ["sync", "IChangedIt", 2],
                ["call", "HorribleService", {}],
                ["print", "@returnValue"] ]
            ],
            ["sync", "Finished", 2]
        ]
    }
}
